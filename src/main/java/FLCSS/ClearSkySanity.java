package FLCSS;

import org.apache.commons.lang3.StringUtils;

import java.util.Locale;

/**
 * A simple sanity check that is intended to make sure that the environment is set
 * up properly for the ClearSky tests to actually execute.  This is a basic class
 * that also provides a sample showing how you can add additional classes and some
 * classes of your own to make working with the project easier as you go along.  You
 * should always separate your core logic from your tests, even in these scenarios.
 *
 * <br><br>
 *
 * Please leave this class in place so we have at least one test to run that will
 * succeed in the project.  Even if you have no other features, this will allow for
 * you to build &amp; submit the project to the ClearSky execution framework in
 * order to make sure things are configured properly.
 */
public class ClearSkySanity {

  /**
   * Retrieves a simple <em>Hello, SOMEONE!</em> response string.  The name that is
   * provided to the method will be trimmed &amp; put into uppercase so that we have
   * something that actually happens besides just a basic method call to format the
   * string information.  If there is no name provided, you will get an exception
   * (which also provides a sample negative test scenario for you).
   * @param name the name to use to say hello to when the method is called
   * @return the <em>Hello</em> string generated by the method call
   * @throws IllegalArgumentException if the name provided is blank/{@code null}
   */
  public String getHello(final String name) {
    // parameter check
    if (StringUtils.isBlank(name)) {
      throw new IllegalArgumentException("Must have a name to say hello to!");
    }

    // some various operations
    String hello = name.toUpperCase(Locale.ENGLISH).trim();
    hello = hello.replaceAll("\\s+", " ").trim();
    hello = String.format("Hello, %s!", hello);
    return StringUtils.normalizeSpace(hello);
  }
}
